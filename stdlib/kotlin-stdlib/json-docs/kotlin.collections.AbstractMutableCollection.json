{
  "name": "kotlin.collections.AbstractMutableCollection",
  "type_parameters": [
    "E"
  ],
  "implements": [
    "kotlin.collections.AbstractCollection<E>",
    "kotlin.collections.MutableCollection<E>"
  ],
  "inherits": [
    "kotlin.collections.AbstractCollection<E>",
    "kotlin.collections.MutableCollection<E>"
  ],
  "class_type": 2,
  "methods": [
    {
      "name": "add",
      "parameters": [
        "E"
      ],
      "type_parameters": [],
      "return_type": "kotlin.Boolean",
      "receiver": null,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "addAll",
      "parameters": [
        "kotlin.collections.Collection<E>"
      ],
      "type_parameters": [],
      "return_type": "kotlin.Boolean",
      "receiver": null,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "clear",
      "parameters": [],
      "type_parameters": [],
      "return_type": "Unit",
      "receiver": null,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "contains",
      "parameters": [
        "E"
      ],
      "type_parameters": [],
      "return_type": "kotlin.Boolean",
      "receiver": null,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "containsAll",
      "parameters": [
        "kotlin.collections.Collection<E>"
      ],
      "type_parameters": [],
      "return_type": "kotlin.Boolean",
      "receiver": null,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "isEmpty",
      "parameters": [],
      "type_parameters": [],
      "return_type": "kotlin.Boolean",
      "receiver": null,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "iterator",
      "parameters": [],
      "type_parameters": [],
      "return_type": "kotlin.collections.Iterator<E>",
      "receiver": null,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "remove",
      "parameters": [
        "E"
      ],
      "type_parameters": [],
      "return_type": "kotlin.Boolean",
      "receiver": null,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "removeAll",
      "parameters": [
        "kotlin.collections.Collection<E>"
      ],
      "type_parameters": [],
      "return_type": "kotlin.Boolean",
      "receiver": null,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "retainAll",
      "parameters": [
        "kotlin.collections.Collection<E>"
      ],
      "type_parameters": [],
      "return_type": "kotlin.Boolean",
      "receiver": null,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "toArray",
      "parameters": [],
      "type_parameters": [],
      "return_type": "kotlin.Array<kotlin.Any?>",
      "receiver": null,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "protected"
    },
    {
      "name": "toArray",
      "parameters": [
        "kotlin.Array<T>"
      ],
      "type_parameters": [
        "T"
      ],
      "return_type": "kotlin.Array<T>",
      "receiver": null,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "protected"
    },
    {
      "name": "toString",
      "parameters": [],
      "type_parameters": [],
      "return_type": "kotlin.String",
      "receiver": null,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    }
  ],
  "fields": [
    {
      "name": "size",
      "type": "kotlin.Int",
      "is_final": true,
      "is_override": true,
      "receiver": null,
      "type_parameters": [],
      "access_mod": "public",
      "is_static": false
    }
  ],
  "is_class": true,
  "parent": null,
  "language": "kotlin"
}