{
  "name": "java.util.function.DoublePredicate",
  "type_parameters": [],
  "implements": [],
  "inherits": [],
  "class_type": 1,
  "methods": [
    {
      "name": "negate",
      "parameters": [],
      "type_parameters": [],
      "return_type": "java.util.function.DoublePredicate",
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": true
    },
    {
      "name": "test",
      "parameters": [
        "double"
      ],
      "type_parameters": [],
      "return_type": "boolean",
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    },
    {
      "name": "and",
      "parameters": [
        "java.util.function.DoublePredicate"
      ],
      "type_parameters": [],
      "return_type": "java.util.function.DoublePredicate",
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [
        "java.lang.NullPointerException"
      ],
      "is_default": true
    },
    {
      "name": "or",
      "parameters": [
        "java.util.function.DoublePredicate"
      ],
      "type_parameters": [],
      "return_type": "java.util.function.DoublePredicate",
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [
        "java.lang.NullPointerException"
      ],
      "is_default": true
    }
  ],
  "fields": [],
  "functional_interface": true,
  "parent": null,
  "access_mod": "public",
  "language": "java"
}