{
  "name": "java.util.stream.Collectors",
  "type_parameters": [],
  "implements": [],
  "inherits": [
    "java.lang.Object"
  ],
  "class_type": 0,
  "methods": [
    {
      "name": "averagingInt",
      "parameters": [
        "java.util.function.ToIntFunction<? super T>"
      ],
      "type_parameters": [
        "T"
      ],
      "return_type": "java.util.stream.Collector<T,?,java.lang.Double>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    },
    {
      "name": "collectingAndThen",
      "parameters": [
        "java.util.stream.Collector<T,A,R>",
        "java.util.function.Function<R,RR>"
      ],
      "type_parameters": [
        "T",
        "A",
        "R",
        "RR"
      ],
      "return_type": "java.util.stream.Collector<T,A,RR>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    },
    {
      "name": "filtering",
      "parameters": [
        "java.util.function.Predicate<? super T>",
        "java.util.stream.Collector<? super T,A,R>"
      ],
      "type_parameters": [
        "T",
        "A",
        "R"
      ],
      "return_type": "java.util.stream.Collector<T,?,R>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    },
    {
      "name": "groupingBy",
      "parameters": [
        "java.util.function.Function<? super T,? extends K>"
      ],
      "type_parameters": [
        "T",
        "K"
      ],
      "return_type": "java.util.stream.Collector<T,?,java.util.Map<K,java.util.List<T>>>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    },
    {
      "name": "groupingBy",
      "parameters": [
        "java.util.function.Function<? super T,? extends K>",
        "java.util.stream.Collector<? super T,A,D>"
      ],
      "type_parameters": [
        "T",
        "K",
        "A",
        "D"
      ],
      "return_type": "java.util.stream.Collector<T,?,java.util.Map<K,D>>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    },
    {
      "name": "groupingByConcurrent",
      "parameters": [
        "java.util.function.Function<? super T,? extends K>",
        "java.util.function.Supplier<M>",
        "java.util.stream.Collector<? super T,A,D>"
      ],
      "type_parameters": [
        "T",
        "K",
        "A",
        "D",
        "M extends java.util.concurrent.ConcurrentMap<K,D>"
      ],
      "return_type": "java.util.stream.Collector<T,?,M>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    },
    {
      "name": "joining",
      "parameters": [],
      "type_parameters": [],
      "return_type": "java.util.stream.Collector<java.lang.CharSequence,?,java.lang.String>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    },
    {
      "name": "joining",
      "parameters": [
        "java.lang.CharSequence",
        "java.lang.CharSequence",
        "java.lang.CharSequence"
      ],
      "type_parameters": [],
      "return_type": "java.util.stream.Collector<java.lang.CharSequence,?,java.lang.String>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    },
    {
      "name": "maxBy",
      "parameters": [
        "java.util.Comparator<? super T>"
      ],
      "type_parameters": [
        "T"
      ],
      "return_type": "java.util.stream.Collector<T,?,java.util.Optional<T>>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    },
    {
      "name": "partitioningBy",
      "parameters": [
        "java.util.function.Predicate<? super T>"
      ],
      "type_parameters": [
        "T"
      ],
      "return_type": "java.util.stream.Collector<T,?,java.util.Map<java.lang.Boolean,java.util.List<T>>>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    },
    {
      "name": "reducing",
      "parameters": [
        "java.util.function.BinaryOperator<T>"
      ],
      "type_parameters": [
        "T"
      ],
      "return_type": "java.util.stream.Collector<T,?,java.util.Optional<T>>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    },
    {
      "name": "reducing",
      "parameters": [
        "U",
        "java.util.function.Function<? super T,? extends U>",
        "java.util.function.BinaryOperator<U>"
      ],
      "type_parameters": [
        "T",
        "U"
      ],
      "return_type": "java.util.stream.Collector<T,?,U>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    },
    {
      "name": "summarizingInt",
      "parameters": [
        "java.util.function.ToIntFunction<? super T>"
      ],
      "type_parameters": [
        "T"
      ],
      "return_type": "java.util.stream.Collector<T,?,java.util.IntSummaryStatistics>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    },
    {
      "name": "summingDouble",
      "parameters": [
        "java.util.function.ToDoubleFunction<? super T>"
      ],
      "type_parameters": [
        "T"
      ],
      "return_type": "java.util.stream.Collector<T,?,java.lang.Double>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    },
    {
      "name": "summingLong",
      "parameters": [
        "java.util.function.ToLongFunction<? super T>"
      ],
      "type_parameters": [
        "T"
      ],
      "return_type": "java.util.stream.Collector<T,?,java.lang.Long>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    },
    {
      "name": "toConcurrentMap",
      "parameters": [
        "java.util.function.Function<? super T,? extends K>",
        "java.util.function.Function<? super T,? extends U>"
      ],
      "type_parameters": [
        "T",
        "K",
        "U"
      ],
      "return_type": "java.util.stream.Collector<T,?,java.util.concurrent.ConcurrentMap<K,U>>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    },
    {
      "name": "toConcurrentMap",
      "parameters": [
        "java.util.function.Function<? super T,? extends K>",
        "java.util.function.Function<? super T,? extends U>",
        "java.util.function.BinaryOperator<U>",
        "java.util.function.Supplier<M>"
      ],
      "type_parameters": [
        "T",
        "K",
        "U",
        "M extends java.util.concurrent.ConcurrentMap<K,U>"
      ],
      "return_type": "java.util.stream.Collector<T,?,M>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    },
    {
      "name": "toMap",
      "parameters": [
        "java.util.function.Function<? super T,? extends K>",
        "java.util.function.Function<? super T,? extends U>"
      ],
      "type_parameters": [
        "T",
        "K",
        "U"
      ],
      "return_type": "java.util.stream.Collector<T,?,java.util.Map<K,U>>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    },
    {
      "name": "toMap",
      "parameters": [
        "java.util.function.Function<? super T,? extends K>",
        "java.util.function.Function<? super T,? extends U>",
        "java.util.function.BinaryOperator<U>",
        "java.util.function.Supplier<M>"
      ],
      "type_parameters": [
        "T",
        "K",
        "U",
        "M extends java.util.Map<K,U>"
      ],
      "return_type": "java.util.stream.Collector<T,?,M>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    },
    {
      "name": "toUnmodifiableList",
      "parameters": [],
      "type_parameters": [
        "T"
      ],
      "return_type": "java.util.stream.Collector<T,?,java.util.List<T>>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    },
    {
      "name": "toUnmodifiableMap",
      "parameters": [
        "java.util.function.Function<? super T,? extends K>",
        "java.util.function.Function<? super T,? extends U>",
        "java.util.function.BinaryOperator<U>"
      ],
      "type_parameters": [
        "T",
        "K",
        "U"
      ],
      "return_type": "java.util.stream.Collector<T,?,java.util.Map<K,U>>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [
        "java.lang.NullPointerException"
      ],
      "is_default": false
    },
    {
      "name": "averagingDouble",
      "parameters": [
        "java.util.function.ToDoubleFunction<? super T>"
      ],
      "type_parameters": [
        "T"
      ],
      "return_type": "java.util.stream.Collector<T,?,java.lang.Double>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    },
    {
      "name": "averagingLong",
      "parameters": [
        "java.util.function.ToLongFunction<? super T>"
      ],
      "type_parameters": [
        "T"
      ],
      "return_type": "java.util.stream.Collector<T,?,java.lang.Double>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    },
    {
      "name": "counting",
      "parameters": [],
      "type_parameters": [
        "T"
      ],
      "return_type": "java.util.stream.Collector<T,?,java.lang.Long>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    },
    {
      "name": "flatMapping",
      "parameters": [
        "java.util.function.Function<? super T,? extends java.util.stream.Stream<? extends U>>",
        "java.util.stream.Collector<? super U,A,R>"
      ],
      "type_parameters": [
        "T",
        "U",
        "A",
        "R"
      ],
      "return_type": "java.util.stream.Collector<T,?,R>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    },
    {
      "name": "groupingBy",
      "parameters": [
        "java.util.function.Function<? super T,? extends K>",
        "java.util.function.Supplier<M>",
        "java.util.stream.Collector<? super T,A,D>"
      ],
      "type_parameters": [
        "T",
        "K",
        "D",
        "A",
        "M extends java.util.Map<K,D>"
      ],
      "return_type": "java.util.stream.Collector<T,?,M>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    },
    {
      "name": "groupingByConcurrent",
      "parameters": [
        "java.util.function.Function<? super T,? extends K>"
      ],
      "type_parameters": [
        "T",
        "K"
      ],
      "return_type": "java.util.stream.Collector<T,?,java.util.concurrent.ConcurrentMap<K,java.util.List<T>>>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    },
    {
      "name": "groupingByConcurrent",
      "parameters": [
        "java.util.function.Function<? super T,? extends K>",
        "java.util.stream.Collector<? super T,A,D>"
      ],
      "type_parameters": [
        "T",
        "K",
        "A",
        "D"
      ],
      "return_type": "java.util.stream.Collector<T,?,java.util.concurrent.ConcurrentMap<K,D>>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    },
    {
      "name": "joining",
      "parameters": [
        "java.lang.CharSequence"
      ],
      "type_parameters": [],
      "return_type": "java.util.stream.Collector<java.lang.CharSequence,?,java.lang.String>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    },
    {
      "name": "mapping",
      "parameters": [
        "java.util.function.Function<? super T,? extends U>",
        "java.util.stream.Collector<? super U,A,R>"
      ],
      "type_parameters": [
        "T",
        "U",
        "A",
        "R"
      ],
      "return_type": "java.util.stream.Collector<T,?,R>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    },
    {
      "name": "minBy",
      "parameters": [
        "java.util.Comparator<? super T>"
      ],
      "type_parameters": [
        "T"
      ],
      "return_type": "java.util.stream.Collector<T,?,java.util.Optional<T>>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    },
    {
      "name": "partitioningBy",
      "parameters": [
        "java.util.function.Predicate<? super T>",
        "java.util.stream.Collector<? super T,A,D>"
      ],
      "type_parameters": [
        "T",
        "D",
        "A"
      ],
      "return_type": "java.util.stream.Collector<T,?,java.util.Map<java.lang.Boolean,D>>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    },
    {
      "name": "reducing",
      "parameters": [
        "T",
        "java.util.function.BinaryOperator<T>"
      ],
      "type_parameters": [
        "T"
      ],
      "return_type": "java.util.stream.Collector<T,?,T>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    },
    {
      "name": "summarizingDouble",
      "parameters": [
        "java.util.function.ToDoubleFunction<? super T>"
      ],
      "type_parameters": [
        "T"
      ],
      "return_type": "java.util.stream.Collector<T,?,java.util.DoubleSummaryStatistics>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    },
    {
      "name": "summarizingLong",
      "parameters": [
        "java.util.function.ToLongFunction<? super T>"
      ],
      "type_parameters": [
        "T"
      ],
      "return_type": "java.util.stream.Collector<T,?,java.util.LongSummaryStatistics>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    },
    {
      "name": "summingInt",
      "parameters": [
        "java.util.function.ToIntFunction<? super T>"
      ],
      "type_parameters": [
        "T"
      ],
      "return_type": "java.util.stream.Collector<T,?,java.lang.Integer>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    },
    {
      "name": "toCollection",
      "parameters": [
        "java.util.function.Supplier<C>"
      ],
      "type_parameters": [
        "T",
        "C extends java.util.Collection<T>"
      ],
      "return_type": "java.util.stream.Collector<T,?,C>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    },
    {
      "name": "toConcurrentMap",
      "parameters": [
        "java.util.function.Function<? super T,? extends K>",
        "java.util.function.Function<? super T,? extends U>",
        "java.util.function.BinaryOperator<U>"
      ],
      "type_parameters": [
        "T",
        "K",
        "U"
      ],
      "return_type": "java.util.stream.Collector<T,?,java.util.concurrent.ConcurrentMap<K,U>>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    },
    {
      "name": "toList",
      "parameters": [],
      "type_parameters": [
        "T"
      ],
      "return_type": "java.util.stream.Collector<T,?,java.util.List<T>>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    },
    {
      "name": "toMap",
      "parameters": [
        "java.util.function.Function<? super T,? extends K>",
        "java.util.function.Function<? super T,? extends U>",
        "java.util.function.BinaryOperator<U>"
      ],
      "type_parameters": [
        "T",
        "K",
        "U"
      ],
      "return_type": "java.util.stream.Collector<T,?,java.util.Map<K,U>>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    },
    {
      "name": "toSet",
      "parameters": [],
      "type_parameters": [
        "T"
      ],
      "return_type": "java.util.stream.Collector<T,?,java.util.Set<T>>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    },
    {
      "name": "toUnmodifiableMap",
      "parameters": [
        "java.util.function.Function<? super T,? extends K>",
        "java.util.function.Function<? super T,? extends U>"
      ],
      "type_parameters": [
        "T",
        "K",
        "U"
      ],
      "return_type": "java.util.stream.Collector<T,?,java.util.Map<K,U>>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [
        "java.lang.NullPointerException"
      ],
      "is_default": false
    },
    {
      "name": "toUnmodifiableSet",
      "parameters": [],
      "type_parameters": [
        "T"
      ],
      "return_type": "java.util.stream.Collector<T,?,java.util.Set<T>>",
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public",
      "throws": [],
      "is_default": false
    }
  ],
  "fields": [],
  "functional_interface": false,
  "parent": null,
  "access_mod": "public",
  "language": "java"
}