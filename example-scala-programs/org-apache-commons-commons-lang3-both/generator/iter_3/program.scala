package src.puffier
def test[P <: java.util.function.IntPredicate, H <: org.apache.commons.lang3.arch.Processor, S <: org.apache.commons.lang3.function.FailableDoubleSupplier[java.lang.Throwable]](): Unit =
{
  val saracen = (???.asInstanceOf[scala.Product2[org.apache.commons.lang3.tuple.ImmutablePair[java.util.Comparator[java.lang.TypeNotPresentException], org.apache.commons.lang3.tuple.Triple[java.util.LinkedHashSet[java.util.EventObject], java.lang.InterruptedException, scala.Tuple4[java.lang.IllegalMonitorStateException, AnyRef, org.apache.commons.lang3.function.FailableDoubleConsumer[java.lang.Throwable], scala.unchecked]]], org.apache.commons.lang3.function.FailableSupplier[java.util.HashMap[java.util.ServiceConfigurationError, org.apache.commons.lang3.function.FailableIntToDoubleFunction[java.lang.Throwable]], java.lang.Throwable]]])._1;
    val tall: java.util.function.Predicate[java.lang.ClassCircularityError] = org.apache.commons.lang3.function.Failable.`asPredicate`(saracen);
  }